# ---------------NEW RULES - CAFE MESSAGES------------------------- #

template welcomemsg(): "Welcome to Corner Bakery Cafe. How can I help you?"
template welcomemsg(help): "Sorry, I can't understand you. Please tell me again what you are looking for."
template welcomemsg(more) : "Can I help you with anything else?"
template bad() : "Sorry I didn't understand that; please tell me again what you are looking for."
template closingmsg() : "Thank you for dining at Corner Bakery. Bon Appetit!"

# System Requests

template request(vegetarian): "Do you want something vegetarian?"
template request(nut_free): "Do you want something nut-free?"
template request(meal): "Are you looking for breakfast, lunch, dinner, or dessert?"
template request(temp): "Would you prefer something hot or cold?"

# Rules for System Inform

function info(slot, value, menu_item)
    if slot = "meal"
        if value = "breakfast": "is available for breakfast"
        if value = "dessert": "is available for dessert"
        if value = "drink": "is available all day"
        if value = "lunch or dinner": "is available for lunch and dinner"
    if slot = "vegetarian"
        if value = "true": "is vegetarian"
        if value = "false": "is not vegetarian"
    if slot = "nut_free"
        if value = "true": "is nut-free"
        if value = "false": "contains nuts"
    if slot = "calories": "has {value} calories"
    if slot = "price": "is {value}"
    if slot = "type"
        if value = "baby bundt": "is a baby bundt cake"
        if value = "bar": "is a dessert bar"
        if value = "coffee": "is a coffee"
        if value = "cookie": "is a cookie"
        if value = "eggs": "is an egg dish"
        if value = "hot chocolate": "is a hot chocolate"
        if value = "lemonade": "is a lemonade"
        if value = "muffin or bagel": "has a choice of muffin or bagel"
        if value = "oatmeal": "is an oatmeal dish"
        if value = "pancakes": "is a pancake dish"
        if value = "panini": "is a panini"
        if value = "pasta": "is a pasta dish"
        if value = "salad": "is a salad"
        if value = "sandwich": "is a sandwich"
        if value = "side": "is a side"
        if value = "soda": "is a soda"
        if value = "soup": "is a soup"
        if value = "tea": "is a tea"
        if value = "wrap": "is a wrap"
        if value = "yogurt": "is a yogurt dish"
    if slot = "temp"
        if value = "hot": "is served hot"
        if value = "cold": "is served cold"

# -------------------------Only Name Slot----------------------------------- #

template inform_byname(menu_item)
	"What do you want to know about the {menu_item}?"

	special_case menu_item = "none"
		"Iâ€™m sorry, I could not find this item."

template inform_alternatives(menu_item)
	"We also have {menu_item}. What do you want to know about it?"

	special_case menu_item = "none"
		"I'm sorry. We don't have another item that fills these requirements."

# ------------------------ Name Slot + Slots---------------------------------- #

template inform_byname(menu_item, *slots)
	"The {menu_item} {for_entry(slots, "info", ", ", ", and ", menu_item)}."

	special_case menu_item = "none"
		"I'm sorry. We don't have an item that {for_entry(slots, "info", ", ", ", and ", menu_item)}."

template inform_alternatives(menu_item, *slots)
	"The {menu_item} also {for_entry(slots, "info", ", ", ", and ", menu_item)}."
	
	special_case menu_item = "none"
		"There is no other course which also {for_entry(slots, "info", ", ", ", and ", menu_item)}."

# ---------------------------System RequestMore------------------------------ #

template reqmore()
	"Can I help you with anything else?"

# ---------------------------System Order & NotOrderable ------------------------------ #

template order(menu_item): "I have added {menu_item} to your order."

template notorderable(menu_item): "I'm sorry, the {menu_item} is out of stock. Please choose something else."

# ---------------------------System Checkout ------------------------------ #

template checkout(total_price, order) : "{order}Your total comes to {total_price}."
# see policy_handcrafted.py (lines 136-140)